// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.2
// source: api/dashBorad/v1/message.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// #### 获取今日攻击信息 攻击数 异常IP数 , 较昨日增长数据
type GetAttackInfoFromDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAttackInfoFromDayRequest) Reset() {
	*x = GetAttackInfoFromDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoFromDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoFromDayRequest) ProtoMessage() {}

func (x *GetAttackInfoFromDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoFromDayRequest.ProtoReflect.Descriptor instead.
func (*GetAttackInfoFromDayRequest) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{0}
}

type GetAttackInfoFromDayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackCount   int64   `protobuf:"varint,1,opt,name=attack_count,json=attackCount,proto3" json:"attack_count,omitempty"`
	AttackIpCount int64   `protobuf:"varint,2,opt,name=attack_ip_count,json=attackIpCount,proto3" json:"attack_ip_count,omitempty"`
	AttackAdd     float32 `protobuf:"fixed32,3,opt,name=attack_add,json=attackAdd,proto3" json:"attack_add,omitempty"`
	AttackIpAdd   float32 `protobuf:"fixed32,4,opt,name=attack_ip_add,json=attackIpAdd,proto3" json:"attack_ip_add,omitempty"`
}

func (x *GetAttackInfoFromDayReply) Reset() {
	*x = GetAttackInfoFromDayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoFromDayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoFromDayReply) ProtoMessage() {}

func (x *GetAttackInfoFromDayReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoFromDayReply.ProtoReflect.Descriptor instead.
func (*GetAttackInfoFromDayReply) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *GetAttackInfoFromDayReply) GetAttackCount() int64 {
	if x != nil {
		return x.AttackCount
	}
	return 0
}

func (x *GetAttackInfoFromDayReply) GetAttackIpCount() int64 {
	if x != nil {
		return x.AttackIpCount
	}
	return 0
}

func (x *GetAttackInfoFromDayReply) GetAttackAdd() float32 {
	if x != nil {
		return x.AttackAdd
	}
	return 0
}

func (x *GetAttackInfoFromDayReply) GetAttackIpAdd() float32 {
	if x != nil {
		return x.AttackIpAdd
	}
	return 0
}

// #### 获取指定日志内的攻击数据 指定时间内的攻击数 , 以及异常IP数据的变化
type GetAttackInfoByTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetAttackInfoByTimeRequest) Reset() {
	*x = GetAttackInfoByTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoByTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoByTimeRequest) ProtoMessage() {}

func (x *GetAttackInfoByTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoByTimeRequest.ProtoReflect.Descriptor instead.
func (*GetAttackInfoByTimeRequest) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *GetAttackInfoByTimeRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetAttackInfoByTimeRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type AttackInfoByTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time          string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	AttackCount   int64  `protobuf:"varint,2,opt,name=attack_count,json=attackCount,proto3" json:"attack_count,omitempty"`
	AttackIpCount int64  `protobuf:"varint,3,opt,name=attack_ip_count,json=attackIpCount,proto3" json:"attack_ip_count,omitempty"`
}

func (x *AttackInfoByTime) Reset() {
	*x = AttackInfoByTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackInfoByTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackInfoByTime) ProtoMessage() {}

func (x *AttackInfoByTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackInfoByTime.ProtoReflect.Descriptor instead.
func (*AttackInfoByTime) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *AttackInfoByTime) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *AttackInfoByTime) GetAttackCount() int64 {
	if x != nil {
		return x.AttackCount
	}
	return 0
}

func (x *AttackInfoByTime) GetAttackIpCount() int64 {
	if x != nil {
		return x.AttackIpCount
	}
	return 0
}

type GetAttackInfoByTimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackInfoByTimes []*AttackInfoByTime `protobuf:"bytes,1,rep,name=attack_info_by_times,json=attackInfoByTimes,proto3" json:"attack_info_by_times,omitempty"`
}

func (x *GetAttackInfoByTimeReply) Reset() {
	*x = GetAttackInfoByTimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoByTimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoByTimeReply) ProtoMessage() {}

func (x *GetAttackInfoByTimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoByTimeReply.ProtoReflect.Descriptor instead.
func (*GetAttackInfoByTimeReply) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetAttackInfoByTimeReply) GetAttackInfoByTimes() []*AttackInfoByTime {
	if x != nil {
		return x.AttackInfoByTimes
	}
	return nil
}

// #### 分类获取各个应用被攻击的信息 获取应用被攻击的信息
type GetAttackInfoFromServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	PageNow   int64  `protobuf:"varint,3,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize  int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetAttackInfoFromServerRequest) Reset() {
	*x = GetAttackInfoFromServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoFromServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoFromServerRequest) ProtoMessage() {}

func (x *GetAttackInfoFromServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoFromServerRequest.ProtoReflect.Descriptor instead.
func (*GetAttackInfoFromServerRequest) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *GetAttackInfoFromServerRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetAttackInfoFromServerRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetAttackInfoFromServerRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *GetAttackInfoFromServerRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetAttackInfoFormServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId    string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Uri      string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Ctime    string `protobuf:"bytes,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	RuleName string `protobuf:"bytes,4,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
}

func (x *GetAttackInfoFormServer) Reset() {
	*x = GetAttackInfoFormServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoFormServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoFormServer) ProtoMessage() {}

func (x *GetAttackInfoFormServer) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoFormServer.ProtoReflect.Descriptor instead.
func (*GetAttackInfoFormServer) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *GetAttackInfoFormServer) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *GetAttackInfoFormServer) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *GetAttackInfoFormServer) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *GetAttackInfoFormServer) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

type GetAttackInfoFromServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAttackInfoFormServer []*GetAttackInfoFormServer `protobuf:"bytes,1,rep,name=get_attack_info_form_server,json=getAttackInfoFormServer,proto3" json:"get_attack_info_form_server,omitempty"`
	Total                   int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetAttackInfoFromServerReply) Reset() {
	*x = GetAttackInfoFromServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackInfoFromServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackInfoFromServerReply) ProtoMessage() {}

func (x *GetAttackInfoFromServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackInfoFromServerReply.ProtoReflect.Descriptor instead.
func (*GetAttackInfoFromServerReply) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *GetAttackInfoFromServerReply) GetGetAttackInfoFormServer() []*GetAttackInfoFormServer {
	if x != nil {
		return x.GetAttackInfoFormServer
	}
	return nil
}

func (x *GetAttackInfoFromServerReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ##### 获取异常IP来源地区
type GetAttackIpFromAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAttackIpFromAddrRequest) Reset() {
	*x = GetAttackIpFromAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackIpFromAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackIpFromAddrRequest) ProtoMessage() {}

func (x *GetAttackIpFromAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackIpFromAddrRequest.ProtoReflect.Descriptor instead.
func (*GetAttackIpFromAddrRequest) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{8}
}

type GetAttackIpFromAddrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAttackIpFromAddrReply) Reset() {
	*x = GetAttackIpFromAddrReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackIpFromAddrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackIpFromAddrReply) ProtoMessage() {}

func (x *GetAttackIpFromAddrReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackIpFromAddrReply.ProtoReflect.Descriptor instead.
func (*GetAttackIpFromAddrReply) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{9}
}

// ### 获取指定的攻击日志详情
type GetAttackDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
}

func (x *GetAttackDetailRequest) Reset() {
	*x = GetAttackDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackDetailRequest) ProtoMessage() {}

func (x *GetAttackDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackDetailRequest.ProtoReflect.Descriptor instead.
func (*GetAttackDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *GetAttackDetailRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

type GetAttackDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri           string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Ctime         string `protobuf:"bytes,2,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Protocol      string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Request       string `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
	RequestMethod string `protobuf:"bytes,5,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	ClientIp      string `protobuf:"bytes,6,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	RuleName      string `protobuf:"bytes,7,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	RuleDesc      string `protobuf:"bytes,8,opt,name=rule_desc,json=ruleDesc,proto3" json:"rule_desc,omitempty"`
	ClientPort    int64  `protobuf:"varint,9,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
}

func (x *GetAttackDetailReply) Reset() {
	*x = GetAttackDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dashBorad_v1_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttackDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackDetailReply) ProtoMessage() {}

func (x *GetAttackDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_dashBorad_v1_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackDetailReply.ProtoReflect.Descriptor instead.
func (*GetAttackDetailReply) Descriptor() ([]byte, []int) {
	return file_api_dashBorad_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *GetAttackDetailReply) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *GetAttackDetailReply) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *GetAttackDetailReply) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetAttackDetailReply) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *GetAttackDetailReply) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *GetAttackDetailReply) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *GetAttackDetailReply) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *GetAttackDetailReply) GetRuleDesc() string {
	if x != nil {
		return x.RuleDesc
	}
	return ""
}

func (x *GetAttackDetailReply) GetClientPort() int64 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

var File_api_dashBorad_v1_message_proto protoreflect.FileDescriptor

var file_api_dashBorad_v1_message_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa9,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x49, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x70, 0x41, 0x64, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0xba,
	0x48, 0x41, 0xba, 0x01, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa3, 0xe7,
	0xa1, 0xae, 0xe7, 0x9a, 0x84, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc,
	0x8f, 0x1a, 0x10, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3d, 0x3d,
	0x20, 0x31, 0x30, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5d,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x42, 0xba, 0x48, 0x3f, 0xba, 0x01, 0x3c, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa3,
	0xe7, 0xa1, 0xae, 0xe7, 0x9a, 0x84, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0xe6, 0xa0, 0xbc, 0xe5,
	0xbc, 0x8f, 0x1a, 0x10, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3d,
	0x3d, 0x20, 0x31, 0x30, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a,
	0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x14,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x11,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0xfd, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0xba, 0x48, 0x41, 0xba, 0x01, 0x3e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0xe8, 0xaf,
	0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa3, 0xe7, 0xa1, 0xae, 0xe7, 0x9a, 0x84,
	0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0x1a, 0x10, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x30, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0xba, 0x48, 0x3f,
	0xba, 0x01, 0x3c, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0xe8,
	0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa3, 0xe7, 0xa1, 0xae, 0xe7, 0x9a,
	0x84, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0x1a, 0x10, 0x73,
	0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x30, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2e, 0xba, 0x48, 0x2b, 0xba,
	0x01, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x12, 0x12, 0xe5, 0x88,
	0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1,
	0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x75, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x67, 0x0a, 0x1b, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x46,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x17, 0x67, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x49, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x06,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xba, 0x48,
	0x31, 0xba, 0x01, 0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x12, 0x14, 0xe6, 0x94,
	0xbb, 0xe5, 0x87, 0xbb, 0xe6, 0x97, 0xa5, 0xe5, 0xbf, 0x97, 0x69, 0x64, 0xe4, 0xb8, 0xba, 0xe7,
	0xa9, 0xba, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e,
	0x20, 0x30, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x42,
	0x34, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x77, 0x61, 0x66, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x72, 0x61, 0x64, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_dashBorad_v1_message_proto_rawDescOnce sync.Once
	file_api_dashBorad_v1_message_proto_rawDescData = file_api_dashBorad_v1_message_proto_rawDesc
)

func file_api_dashBorad_v1_message_proto_rawDescGZIP() []byte {
	file_api_dashBorad_v1_message_proto_rawDescOnce.Do(func() {
		file_api_dashBorad_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_dashBorad_v1_message_proto_rawDescData)
	})
	return file_api_dashBorad_v1_message_proto_rawDescData
}

var file_api_dashBorad_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_dashBorad_v1_message_proto_goTypes = []any{
	(*GetAttackInfoFromDayRequest)(nil),    // 0: api.dashBorad.v1.GetAttackInfoFromDayRequest
	(*GetAttackInfoFromDayReply)(nil),      // 1: api.dashBorad.v1.GetAttackInfoFromDayReply
	(*GetAttackInfoByTimeRequest)(nil),     // 2: api.dashBorad.v1.GetAttackInfoByTimeRequest
	(*AttackInfoByTime)(nil),               // 3: api.dashBorad.v1.AttackInfoByTime
	(*GetAttackInfoByTimeReply)(nil),       // 4: api.dashBorad.v1.GetAttackInfoByTimeReply
	(*GetAttackInfoFromServerRequest)(nil), // 5: api.dashBorad.v1.GetAttackInfoFromServerRequest
	(*GetAttackInfoFormServer)(nil),        // 6: api.dashBorad.v1.GetAttackInfoFormServer
	(*GetAttackInfoFromServerReply)(nil),   // 7: api.dashBorad.v1.GetAttackInfoFromServerReply
	(*GetAttackIpFromAddrRequest)(nil),     // 8: api.dashBorad.v1.GetAttackIpFromAddrRequest
	(*GetAttackIpFromAddrReply)(nil),       // 9: api.dashBorad.v1.GetAttackIpFromAddrReply
	(*GetAttackDetailRequest)(nil),         // 10: api.dashBorad.v1.GetAttackDetailRequest
	(*GetAttackDetailReply)(nil),           // 11: api.dashBorad.v1.GetAttackDetailReply
}
var file_api_dashBorad_v1_message_proto_depIdxs = []int32{
	3, // 0: api.dashBorad.v1.GetAttackInfoByTimeReply.attack_info_by_times:type_name -> api.dashBorad.v1.AttackInfoByTime
	6, // 1: api.dashBorad.v1.GetAttackInfoFromServerReply.get_attack_info_form_server:type_name -> api.dashBorad.v1.GetAttackInfoFormServer
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_dashBorad_v1_message_proto_init() }
func file_api_dashBorad_v1_message_proto_init() {
	if File_api_dashBorad_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_dashBorad_v1_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoFromDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoFromDayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoByTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AttackInfoByTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoByTimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoFromServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoFormServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackInfoFromServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackIpFromAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackIpFromAddrReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dashBorad_v1_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttackDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_dashBorad_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_dashBorad_v1_message_proto_goTypes,
		DependencyIndexes: file_api_dashBorad_v1_message_proto_depIdxs,
		MessageInfos:      file_api_dashBorad_v1_message_proto_msgTypes,
	}.Build()
	File_api_dashBorad_v1_message_proto = out.File
	file_api_dashBorad_v1_message_proto_rawDesc = nil
	file_api_dashBorad_v1_message_proto_goTypes = nil
	file_api_dashBorad_v1_message_proto_depIdxs = nil
}
