// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.2
// source: api/wafTop/v1/message.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeclangMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchGoal    string `protobuf:"bytes,1,opt,name=match_goal,json=matchGoal,proto3" json:"match_goal,omitempty"`
	MatchAction  string `protobuf:"bytes,2,opt,name=match_action,json=matchAction,proto3" json:"match_action,omitempty"`
	MatchContent string `protobuf:"bytes,3,opt,name=match_content,json=matchContent,proto3" json:"match_content,omitempty"`
}

func (x *SeclangMod) Reset() {
	*x = SeclangMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeclangMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeclangMod) ProtoMessage() {}

func (x *SeclangMod) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeclangMod.ProtoReflect.Descriptor instead.
func (*SeclangMod) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *SeclangMod) GetMatchGoal() string {
	if x != nil {
		return x.MatchGoal
	}
	return ""
}

func (x *SeclangMod) GetMatchAction() string {
	if x != nil {
		return x.MatchAction
	}
	return ""
}

func (x *SeclangMod) GetMatchContent() string {
	if x != nil {
		return x.MatchContent
	}
	return ""
}

// waf保护的应用程序
type CreateWafAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ServerId int64  `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *CreateWafAppRequest) Reset() {
	*x = CreateWafAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWafAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWafAppRequest) ProtoMessage() {}

func (x *CreateWafAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWafAppRequest.ProtoReflect.Descriptor instead.
func (*CreateWafAppRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWafAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWafAppRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateWafAppRequest) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type CreateWafAppReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWafAppReply) Reset() {
	*x = CreateWafAppReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWafAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWafAppReply) ProtoMessage() {}

func (x *CreateWafAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWafAppReply.ProtoReflect.Descriptor instead.
func (*CreateWafAppReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{2}
}

type UpdateWafAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ServerId int64  `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Id       int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateWafAppRequest) Reset() {
	*x = UpdateWafAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWafAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWafAppRequest) ProtoMessage() {}

func (x *UpdateWafAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWafAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateWafAppRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateWafAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWafAppRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateWafAppRequest) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateWafAppRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateWafAppReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWafAppReply) Reset() {
	*x = UpdateWafAppReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWafAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWafAppReply) ProtoMessage() {}

func (x *UpdateWafAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWafAppReply.ProtoReflect.Descriptor instead.
func (*UpdateWafAppReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{4}
}

type GetWafAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWafAppRequest) Reset() {
	*x = GetWafAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWafAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWafAppRequest) ProtoMessage() {}

func (x *GetWafAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWafAppRequest.ProtoReflect.Descriptor instead.
func (*GetWafAppRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *GetWafAppRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetWafAppReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url        string      `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ServerInfo *ServerInfo `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
}

func (x *GetWafAppReply) Reset() {
	*x = GetWafAppReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWafAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWafAppReply) ProtoMessage() {}

func (x *GetWafAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWafAppReply.ProtoReflect.Descriptor instead.
func (*GetWafAppReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *GetWafAppReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWafAppReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetWafAppReply) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

type ListWafAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PageNow  int64  `protobuf:"varint,2,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListWafAppRequest) Reset() {
	*x = ListWafAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWafAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWafAppRequest) ProtoMessage() {}

func (x *ListWafAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWafAppRequest.ProtoReflect.Descriptor instead.
func (*ListWafAppRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *ListWafAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWafAppRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *ListWafAppRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type WafAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WafAppInfo) Reset() {
	*x = WafAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WafAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WafAppInfo) ProtoMessage() {}

func (x *WafAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WafAppInfo.ProtoReflect.Descriptor instead.
func (*WafAppInfo) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *WafAppInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WafAppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WafAppInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListWafAppReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	WafApps []*WafAppInfo `protobuf:"bytes,2,rep,name=waf_apps,json=wafApps,proto3" json:"waf_apps,omitempty"`
}

func (x *ListWafAppReply) Reset() {
	*x = ListWafAppReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWafAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWafAppReply) ProtoMessage() {}

func (x *ListWafAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWafAppReply.ProtoReflect.Descriptor instead.
func (*ListWafAppReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *ListWafAppReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListWafAppReply) GetWafApps() []*WafAppInfo {
	if x != nil {
		return x.WafApps
	}
	return nil
}

// waf保护的服务器
type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip          string  `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Host        string  `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port        int64   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	StrategyIds []int64 `protobuf:"varint,5,rep,packed,name=strategy_ids,json=strategyIds,proto3" json:"strategy_ids,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *CreateServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServerRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateServerRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateServerRequest) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateServerRequest) GetStrategyIds() []int64 {
	if x != nil {
		return x.StrategyIds
	}
	return nil
}

type CreateServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateServerReply) Reset() {
	*x = CreateServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerReply) ProtoMessage() {}

func (x *CreateServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerReply.ProtoReflect.Descriptor instead.
func (*CreateServerReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{11}
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip          string  `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Host        string  `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port        int64   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Id          int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	StrategyIds []int64 `protobuf:"varint,6,rep,packed,name=strategy_ids,json=strategyIds,proto3" json:"strategy_ids,omitempty"`
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateServerRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UpdateServerRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateServerRequest) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateServerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateServerRequest) GetStrategyIds() []int64 {
	if x != nil {
		return x.StrategyIds
	}
	return nil
}

type UpdateServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerReply) Reset() {
	*x = UpdateServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerReply) ProtoMessage() {}

func (x *UpdateServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerReply.ProtoReflect.Descriptor instead.
func (*UpdateServerReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{13}
}

// 删除服务器
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{15}
}

// 根据服务器id 查询服务器详细信息
type GetServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{16}
}

func (x *GetServerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip           string      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Host         string      `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port         int64       `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	StrategiesId []int64     `protobuf:"varint,5,rep,packed,name=strategies_id,json=strategiesId,proto3" json:"strategies_id,omitempty"`
	WafApps      *WafAppInfo `protobuf:"bytes,6,opt,name=waf_apps,json=wafApps,proto3" json:"waf_apps,omitempty"`
}

func (x *GetServerReply) Reset() {
	*x = GetServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerReply) ProtoMessage() {}

func (x *GetServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerReply.ProtoReflect.Descriptor instead.
func (*GetServerReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{17}
}

func (x *GetServerReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServerReply) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetServerReply) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetServerReply) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetServerReply) GetStrategiesId() []int64 {
	if x != nil {
		return x.StrategiesId
	}
	return nil
}

func (x *GetServerReply) GetWafApps() *WafAppInfo {
	if x != nil {
		return x.WafApps
	}
	return nil
}

// 查询服务器列表
type ListServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PageNow  int64  `protobuf:"varint,2,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListServerRequest) Reset() {
	*x = ListServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServerRequest) ProtoMessage() {}

func (x *ListServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServerRequest.ProtoReflect.Descriptor instead.
func (*ListServerRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{18}
}

func (x *ListServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListServerRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *ListServerRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port int64  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Id   int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{19}
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServerInfo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ListServers []*ServerInfo `protobuf:"bytes,2,rep,name=list_servers,json=listServers,proto3" json:"list_servers,omitempty"`
}

func (x *ListServerReply) Reset() {
	*x = ListServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServerReply) ProtoMessage() {}

func (x *ListServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServerReply.ProtoReflect.Descriptor instead.
func (*ListServerReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{20}
}

func (x *ListServerReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServerReply) GetListServers() []*ServerInfo {
	if x != nil {
		return x.ListServers
	}
	return nil
}

type CreateStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status      int64   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Action      int64   `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	NextAction  int64   `protobuf:"varint,5,opt,name=next_action,json=nextAction,proto3" json:"next_action,omitempty"`
	GroupId     []int64 `protobuf:"varint,6,rep,packed,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateStrategyRequest) Reset() {
	*x = CreateStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyRequest) ProtoMessage() {}

func (x *CreateStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyRequest.ProtoReflect.Descriptor instead.
func (*CreateStrategyRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{21}
}

func (x *CreateStrategyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStrategyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateStrategyRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateStrategyRequest) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *CreateStrategyRequest) GetNextAction() int64 {
	if x != nil {
		return x.NextAction
	}
	return 0
}

func (x *CreateStrategyRequest) GetGroupId() []int64 {
	if x != nil {
		return x.GroupId
	}
	return nil
}

type CreateStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateStrategyReply) Reset() {
	*x = CreateStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyReply) ProtoMessage() {}

func (x *CreateStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyReply.ProtoReflect.Descriptor instead.
func (*CreateStrategyReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{22}
}

type UpdateStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status      int64   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Action      int64   `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	NextAction  int64   `protobuf:"varint,5,opt,name=next_action,json=nextAction,proto3" json:"next_action,omitempty"`
	GroupId     []int64 `protobuf:"varint,6,rep,packed,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Id          int64   `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateStrategyRequest) Reset() {
	*x = UpdateStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategyRequest) ProtoMessage() {}

func (x *UpdateStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateStrategyRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateStrategyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStrategyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateStrategyRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateStrategyRequest) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *UpdateStrategyRequest) GetNextAction() int64 {
	if x != nil {
		return x.NextAction
	}
	return 0
}

func (x *UpdateStrategyRequest) GetGroupId() []int64 {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *UpdateStrategyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStrategyReply) Reset() {
	*x = UpdateStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategyReply) ProtoMessage() {}

func (x *UpdateStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategyReply.ProtoReflect.Descriptor instead.
func (*UpdateStrategyReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{24}
}

type DeleteStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteStrategyRequest) Reset() {
	*x = DeleteStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategyRequest) ProtoMessage() {}

func (x *DeleteStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategyRequest.ProtoReflect.Descriptor instead.
func (*DeleteStrategyRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteStrategyRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStrategyReply) Reset() {
	*x = DeleteStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategyReply) ProtoMessage() {}

func (x *DeleteStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategyReply.ProtoReflect.Descriptor instead.
func (*DeleteStrategyReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{26}
}

type GetStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStrategyRequest) Reset() {
	*x = GetStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyRequest) ProtoMessage() {}

func (x *GetStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyRequest.ProtoReflect.Descriptor instead.
func (*GetStrategyRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{27}
}

func (x *GetStrategyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status         int64            `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Action         int64            `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	NextAction     int64            `protobuf:"varint,5,opt,name=next_action,json=nextAction,proto3" json:"next_action,omitempty"`
	RuleGroupInfos []*RuleGroupInfo `protobuf:"bytes,6,rep,name=rule_group_infos,json=ruleGroupInfos,proto3" json:"rule_group_infos,omitempty"`
}

func (x *GetStrategyReply) Reset() {
	*x = GetStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyReply) ProtoMessage() {}

func (x *GetStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyReply.ProtoReflect.Descriptor instead.
func (*GetStrategyReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{28}
}

func (x *GetStrategyReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStrategyReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetStrategyReply) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetStrategyReply) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *GetStrategyReply) GetNextAction() int64 {
	if x != nil {
		return x.NextAction
	}
	return 0
}

func (x *GetStrategyReply) GetRuleGroupInfos() []*RuleGroupInfo {
	if x != nil {
		return x.RuleGroupInfos
	}
	return nil
}

type ListStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status   int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	PageNow  int64  `protobuf:"varint,3,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListStrategyRequest) Reset() {
	*x = ListStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategyRequest) ProtoMessage() {}

func (x *ListStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategyRequest.ProtoReflect.Descriptor instead.
func (*ListStrategyRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{29}
}

func (x *ListStrategyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListStrategyRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListStrategyRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *ListStrategyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type StrategyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status      int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Action      int64  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	NextAction  int64  `protobuf:"varint,4,opt,name=next_action,json=nextAction,proto3" json:"next_action,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StrategyInfo) Reset() {
	*x = StrategyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyInfo) ProtoMessage() {}

func (x *StrategyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyInfo.ProtoReflect.Descriptor instead.
func (*StrategyInfo) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{30}
}

func (x *StrategyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StrategyInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StrategyInfo) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *StrategyInfo) GetNextAction() int64 {
	if x != nil {
		return x.NextAction
	}
	return 0
}

func (x *StrategyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StrategyInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StrategyInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StrategyInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Strategies []*StrategyInfo `protobuf:"bytes,2,rep,name=strategies,proto3" json:"strategies,omitempty"`
}

func (x *ListStrategyReply) Reset() {
	*x = ListStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategyReply) ProtoMessage() {}

func (x *ListStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategyReply.ProtoReflect.Descriptor instead.
func (*ListStrategyReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{31}
}

func (x *ListStrategyReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStrategyReply) GetStrategies() []*StrategyInfo {
	if x != nil {
		return x.Strategies
	}
	return nil
}

// ########## 内置规则 ###########
type GetBuildRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBuildRuleRequest) Reset() {
	*x = GetBuildRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildRuleRequest) ProtoMessage() {}

func (x *GetBuildRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildRuleRequest.ProtoReflect.Descriptor instead.
func (*GetBuildRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{32}
}

func (x *GetBuildRuleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBuildRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	RiskLevel   int64  `protobuf:"varint,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	GroupId     int64  `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetBuildRuleReply) Reset() {
	*x = GetBuildRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildRuleReply) ProtoMessage() {}

func (x *GetBuildRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildRuleReply.ProtoReflect.Descriptor instead.
func (*GetBuildRuleReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{33}
}

func (x *GetBuildRuleReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetBuildRuleReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetBuildRuleReply) GetRiskLevel() int64 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

func (x *GetBuildRuleReply) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ListBuildRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PageNow  int64  `protobuf:"varint,2,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListBuildRuleRequest) Reset() {
	*x = ListBuildRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildRuleRequest) ProtoMessage() {}

func (x *ListBuildRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildRuleRequest.ProtoReflect.Descriptor instead.
func (*ListBuildRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{34}
}

func (x *ListBuildRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListBuildRuleRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *ListBuildRuleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BuildinRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RiskLevel   int64  `protobuf:"varint,2,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GroupId     int64  `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BuildinRule) Reset() {
	*x = BuildinRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildinRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildinRule) ProtoMessage() {}

func (x *BuildinRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildinRule.ProtoReflect.Descriptor instead.
func (*BuildinRule) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{35}
}

func (x *BuildinRule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuildinRule) GetRiskLevel() int64 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

func (x *BuildinRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuildinRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuildinRule) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *BuildinRule) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BuildinRule) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListBuildRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	BuildinRules []*BuildinRule `protobuf:"bytes,2,rep,name=buildin_rules,json=buildinRules,proto3" json:"buildin_rules,omitempty"`
}

func (x *ListBuildRuleReply) Reset() {
	*x = ListBuildRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildRuleReply) ProtoMessage() {}

func (x *ListBuildRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildRuleReply.ProtoReflect.Descriptor instead.
func (*ListBuildRuleReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{36}
}

func (x *ListBuildRuleReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBuildRuleReply) GetBuildinRules() []*BuildinRule {
	if x != nil {
		return x.BuildinRules
	}
	return nil
}

// ########## 用户自定义规则 #########
type CreateUserRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	RiskLevel   int64       `protobuf:"varint,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	GroupId     int64       `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	SeclangMod  *SeclangMod `protobuf:"bytes,5,opt,name=seclang_mod,json=seclangMod,proto3" json:"seclang_mod,omitempty"`
}

func (x *CreateUserRuleRequest) Reset() {
	*x = CreateUserRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRuleRequest) ProtoMessage() {}

func (x *CreateUserRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{37}
}

func (x *CreateUserRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateUserRuleRequest) GetRiskLevel() int64 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

func (x *CreateUserRuleRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CreateUserRuleRequest) GetSeclangMod() *SeclangMod {
	if x != nil {
		return x.SeclangMod
	}
	return nil
}

type CreateUserRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUserRuleReply) Reset() {
	*x = CreateUserRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRuleReply) ProtoMessage() {}

func (x *CreateUserRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRuleReply.ProtoReflect.Descriptor instead.
func (*CreateUserRuleReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{38}
}

type UpdateUserRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RiskLevel   int64       `protobuf:"varint,4,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	GroupId     int64       `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	SeclangMod  *SeclangMod `protobuf:"bytes,6,opt,name=seclang_mod,json=seclangMod,proto3" json:"seclang_mod,omitempty"`
}

func (x *UpdateUserRuleRequest) Reset() {
	*x = UpdateUserRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRuleRequest) ProtoMessage() {}

func (x *UpdateUserRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateUserRuleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateUserRuleRequest) GetRiskLevel() int64 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

func (x *UpdateUserRuleRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UpdateUserRuleRequest) GetSeclangMod() *SeclangMod {
	if x != nil {
		return x.SeclangMod
	}
	return nil
}

type UpdateUserRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserRuleReply) Reset() {
	*x = UpdateUserRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRuleReply) ProtoMessage() {}

func (x *UpdateUserRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRuleReply.ProtoReflect.Descriptor instead.
func (*UpdateUserRuleReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{40}
}

type DeleteUserRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteUserRuleRequest) Reset() {
	*x = DeleteUserRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRuleRequest) ProtoMessage() {}

func (x *DeleteUserRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteUserRuleRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteUserRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserRuleReply) Reset() {
	*x = DeleteUserRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRuleReply) ProtoMessage() {}

func (x *DeleteUserRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRuleReply.ProtoReflect.Descriptor instead.
func (*DeleteUserRuleReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{42}
}

// ####### 规则组 #########
type CreateRuleGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsBuildin   int64  `protobuf:"varint,3,opt,name=is_buildin,json=isBuildin,proto3" json:"is_buildin,omitempty"`
}

func (x *CreateRuleGroupRequest) Reset() {
	*x = CreateRuleGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleGroupRequest) ProtoMessage() {}

func (x *CreateRuleGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{43}
}

func (x *CreateRuleGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRuleGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRuleGroupRequest) GetIsBuildin() int64 {
	if x != nil {
		return x.IsBuildin
	}
	return 0
}

type CreateRuleGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRuleGroupReply) Reset() {
	*x = CreateRuleGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleGroupReply) ProtoMessage() {}

func (x *CreateRuleGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleGroupReply.ProtoReflect.Descriptor instead.
func (*CreateRuleGroupReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{44}
}

type UpdateRuleGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsBuildin   int64  `protobuf:"varint,4,opt,name=is_buildin,json=isBuildin,proto3" json:"is_buildin,omitempty"`
}

func (x *UpdateRuleGroupRequest) Reset() {
	*x = UpdateRuleGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleGroupRequest) ProtoMessage() {}

func (x *UpdateRuleGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateRuleGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRuleGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRuleGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRuleGroupRequest) GetIsBuildin() int64 {
	if x != nil {
		return x.IsBuildin
	}
	return 0
}

type UpdateRuleGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRuleGroupReply) Reset() {
	*x = UpdateRuleGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleGroupReply) ProtoMessage() {}

func (x *UpdateRuleGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleGroupReply.ProtoReflect.Descriptor instead.
func (*UpdateRuleGroupReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{46}
}

type DeleteRuleGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteRuleGroupRequest) Reset() {
	*x = DeleteRuleGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleGroupRequest) ProtoMessage() {}

func (x *DeleteRuleGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteRuleGroupRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteRuleGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRuleGroupReply) Reset() {
	*x = DeleteRuleGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleGroupReply) ProtoMessage() {}

func (x *DeleteRuleGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleGroupReply.ProtoReflect.Descriptor instead.
func (*DeleteRuleGroupReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{48}
}

type GetRuleGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRuleGroupRequest) Reset() {
	*x = GetRuleGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleGroupRequest) ProtoMessage() {}

func (x *GetRuleGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleGroupRequest.ProtoReflect.Descriptor instead.
func (*GetRuleGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{49}
}

func (x *GetRuleGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRuleGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsBuildin   int64                  `protobuf:"varint,3,opt,name=is_buildin,json=isBuildin,proto3" json:"is_buildin,omitempty"`
	ListRules   []*ListRuleInfoByGroup `protobuf:"bytes,4,rep,name=list_rules,json=listRules,proto3" json:"list_rules,omitempty"`
}

func (x *GetRuleGroupReply) Reset() {
	*x = GetRuleGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuleGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleGroupReply) ProtoMessage() {}

func (x *GetRuleGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleGroupReply.ProtoReflect.Descriptor instead.
func (*GetRuleGroupReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{50}
}

func (x *GetRuleGroupReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRuleGroupReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetRuleGroupReply) GetIsBuildin() int64 {
	if x != nil {
		return x.IsBuildin
	}
	return 0
}

func (x *GetRuleGroupReply) GetListRules() []*ListRuleInfoByGroup {
	if x != nil {
		return x.ListRules
	}
	return nil
}

type ListRuleGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsBuildin int64  `protobuf:"varint,2,opt,name=is_buildin,json=isBuildin,proto3" json:"is_buildin,omitempty"`
	PageNow   int64  `protobuf:"varint,3,opt,name=page_now,json=pageNow,proto3" json:"page_now,omitempty"`
	PageSize  int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListRuleGroupRequest) Reset() {
	*x = ListRuleGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuleGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleGroupRequest) ProtoMessage() {}

func (x *ListRuleGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleGroupRequest.ProtoReflect.Descriptor instead.
func (*ListRuleGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{51}
}

func (x *ListRuleGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListRuleGroupRequest) GetIsBuildin() int64 {
	if x != nil {
		return x.IsBuildin
	}
	return 0
}

func (x *ListRuleGroupRequest) GetPageNow() int64 {
	if x != nil {
		return x.PageNow
	}
	return 0
}

func (x *ListRuleGroupRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListRuleGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	RuleGroupInfos []*RuleGroupInfo `protobuf:"bytes,2,rep,name=rule_group_infos,json=ruleGroupInfos,proto3" json:"rule_group_infos,omitempty"`
}

func (x *ListRuleGroupReply) Reset() {
	*x = ListRuleGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuleGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleGroupReply) ProtoMessage() {}

func (x *ListRuleGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleGroupReply.ProtoReflect.Descriptor instead.
func (*ListRuleGroupReply) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{52}
}

func (x *ListRuleGroupReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRuleGroupReply) GetRuleGroupInfos() []*RuleGroupInfo {
	if x != nil {
		return x.RuleGroupInfos
	}
	return nil
}

type RuleGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsBuildin   int64  `protobuf:"varint,4,opt,name=is_buildin,json=isBuildin,proto3" json:"is_buildin,omitempty"`
	CreatedAt   string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RuleGroupInfo) Reset() {
	*x = RuleGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleGroupInfo) ProtoMessage() {}

func (x *RuleGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleGroupInfo.ProtoReflect.Descriptor instead.
func (*RuleGroupInfo) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{53}
}

func (x *RuleGroupInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleGroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleGroupInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RuleGroupInfo) GetIsBuildin() int64 {
	if x != nil {
		return x.IsBuildin
	}
	return 0
}

func (x *RuleGroupInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RuleGroupInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListRuleInfoByGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      int64       `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	RiskLevel   int64       `protobuf:"varint,5,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	SeclangMod  *SeclangMod `protobuf:"bytes,6,opt,name=seclang_mod,json=seclangMod,proto3" json:"seclang_mod,omitempty"`
}

func (x *ListRuleInfoByGroup) Reset() {
	*x = ListRuleInfoByGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wafTop_v1_message_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuleInfoByGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleInfoByGroup) ProtoMessage() {}

func (x *ListRuleInfoByGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_wafTop_v1_message_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleInfoByGroup.ProtoReflect.Descriptor instead.
func (*ListRuleInfoByGroup) Descriptor() ([]byte, []int) {
	return file_api_wafTop_v1_message_proto_rawDescGZIP(), []int{54}
}

func (x *ListRuleInfoByGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListRuleInfoByGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListRuleInfoByGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListRuleInfoByGroup) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListRuleInfoByGroup) GetRiskLevel() int64 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

func (x *ListRuleInfoByGroup) GetSeclangMod() *SeclangMod {
	if x != nil {
		return x.SeclangMod
	}
	return nil
}

var File_api_wafTop_v1_message_proto protoreflect.FileDescriptor

var file_api_wafTop_v1_message_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x02, 0x0a, 0x0a, 0x53, 0x65,
	0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x12, 0x61, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0xba, 0x48,
	0x3f, 0xba, 0x01, 0x3c, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa3, 0xe7, 0xa1,
	0xae, 0xe7, 0x9a, 0x84, 0xe5, 0x8c, 0xb9, 0xe9, 0x85, 0x8d, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87,
	0x1a, 0x0e, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x27, 0x49, 0x50, 0x27, 0x5d,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x79, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x56, 0xba, 0x48, 0x53, 0xba, 0x01, 0x50, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6,
	0x8b, 0xa9, 0xe6, 0xad, 0xa3, 0xe7, 0xa1, 0xae, 0xe7, 0x9a, 0x84, 0xe5, 0x8c, 0xb9, 0xe9, 0x85,
	0x8d, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x1a, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e,
	0x20, 0x5b, 0x27, 0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0x27, 0x20, 0x2c, 0x20, 0x27, 0xe4, 0xb8,
	0x8d, 0xe7, 0xad, 0x89, 0xe4, 0xba, 0x8e, 0x27, 0x5d, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3c, 0xba,
	0x48, 0x39, 0xba, 0x01, 0x36, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x15, 0xe8, 0xaf, 0xb7, 0xe8, 0xbe, 0x93, 0xe5, 0x85, 0xa5, 0xe5,
	0x8c, 0xb9, 0xe9, 0x85, 0x8d, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0x1a, 0x0e, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x67, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x53, 0xba, 0x48, 0x50, 0xba, 0x01, 0x4d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0xe5,
	0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0xa8, 0x8b, 0xe5, 0xba, 0x8f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0xba, 0x94, 0xe4, 0xb8, 0xba, 0x31, 0x7e, 0x31,
	0x35, 0x1a, 0x21, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d,
	0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20,
	0x3c, 0x3d, 0x31, 0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4c, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x12, 0x12, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe4, 0xb8, 0x8d,
	0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x98, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x53, 0xba, 0x48, 0x50, 0xba, 0x01, 0x4d, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0xa8, 0x8b, 0xe5, 0xba,
	0x8f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0xba, 0x94,
	0xe4, 0xb8, 0xba, 0x31, 0x7e, 0x31, 0x35, 0x1a, 0x21, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68,
	0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28,
	0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x31, 0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x4c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x12, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1,
	0xe5, 0x99, 0xa8, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x28, 0xba, 0x48,
	0x25, 0xba, 0x01, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x12, 0x77, 0x65, 0x62, 0xe7, 0xa8, 0x8b,
	0xe5, 0xba, 0x8f, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x2b, 0xba, 0x48, 0x28, 0xba, 0x01, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x15, 0xe5, 0xba, 0x94,
	0xe7, 0x94, 0xa8, 0xe7, 0xa8, 0x8b, 0xe5, 0xba, 0x8f, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5,
	0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x66,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x2e, 0xba, 0x48, 0x2b, 0xba, 0x01, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x6f, 0x77, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48,
	0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x42, 0x0a, 0x0a, 0x57, 0x61, 0x66, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5d, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x08, 0x77, 0x61, 0x66, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66,
	0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x66, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x77, 0x61, 0x66, 0x41, 0x70, 0x70, 0x73, 0x22, 0xd5, 0x03, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x63, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x4f, 0xba, 0x48, 0x4c, 0xba, 0x01, 0x49, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0xe5, 0x90, 0x8d, 0xe5, 0xad, 0x97, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x31,
	0x7e, 0x31, 0x35, 0xe5, 0xad, 0x97, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31,
	0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x30, 0xba, 0x48, 0x2d, 0xba, 0x01, 0x2a, 0x0a, 0x02, 0x69, 0x70, 0x12,
	0x17, 0x49, 0x50, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe4,
	0xb8, 0x8d, 0xe8, 0xa7, 0x84, 0xe8, 0x8c, 0x83, 0x1a, 0x0b, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x69,
	0x73, 0x49, 0x70, 0x28, 0x29, 0x52, 0x02, 0x69, 0x70, 0x12, 0x4e, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xba, 0x48, 0x37, 0xba, 0x01, 0x34, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x18, 0xe5, 0x9f, 0xba, 0xe7, 0xa1,
	0x80, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20,
	0x3e, 0x20, 0x30, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x46, 0xba, 0x48, 0x43, 0xba, 0x01, 0x40, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0xe7, 0xab, 0xaf, 0xe5, 0x8f, 0xa3, 0xe9, 0x80, 0x89,
	0xe6, 0x8b, 0xa9, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x36, 0x35, 0x35, 0x33, 0x35, 0xe4, 0xb9, 0x8b,
	0xe9, 0x97, 0xb4, 0x1a, 0x1a, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26,
	0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x35, 0x35, 0x33, 0x35, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x6b, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x42, 0x48, 0xba, 0x48, 0x45,
	0xba, 0x01, 0x42, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64,
	0x73, 0x12, 0x21, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe7, 0x9a, 0x84, 0xe7, 0xad,
	0x96, 0xe7, 0x95, 0xa5, 0x1a, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29,
	0x20, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49,
	0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8f, 0x04, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x63, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4f, 0xba,
	0x48, 0x4c, 0xba, 0x01, 0x49, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0xe5, 0x90, 0x8d,
	0xe5, 0xad, 0x97, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35,
	0xe5, 0xad, 0x97, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69, 0x7a, 0x65, 0x28,
	0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x35, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x30, 0xba, 0x48, 0x2d, 0xba, 0x01, 0x2a, 0x0a, 0x02, 0x69, 0x70, 0x12, 0x17, 0x49, 0x50,
	0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe4, 0xb8, 0x8d, 0xe8,
	0xa7, 0x84, 0xe8, 0x8c, 0x83, 0x1a, 0x0b, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x73, 0x49, 0x70,
	0x28, 0x29, 0x52, 0x02, 0x69, 0x70, 0x12, 0x4e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xba, 0x48, 0x37, 0xba, 0x01, 0x34, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x18, 0xe5, 0x9f, 0xba, 0xe7, 0xa1, 0x80, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x46, 0xba, 0x48, 0x43, 0xba, 0x01, 0x40, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0xe7, 0xab, 0xaf, 0xe5, 0x8f, 0xa3, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9,
	0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x36, 0x35, 0x35, 0x33, 0x35, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4,
	0x1a, 0x1a, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x35, 0x35, 0x33, 0x35, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x28,
	0xba, 0x48, 0x25, 0xba, 0x01, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x12, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6b, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x03, 0x42, 0x48, 0xba, 0x48, 0x45, 0xba, 0x01, 0x42, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x21, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89,
	0xe6, 0x8b, 0xa9, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe4, 0xbd, 0xbf, 0xe7,
	0x94, 0xa8, 0xe7, 0x9a, 0x84, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0x1a, 0x0f, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x83,
	0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x72, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x60, 0xba,
	0x48, 0x5d, 0xba, 0x01, 0x2c, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x15, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7, 0xa9,
	0xba, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20,
	0x30, 0x92, 0x01, 0x2b, 0x22, 0x29, 0xba, 0x01, 0x26, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x15,
	0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe9,
	0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x2b, 0xba, 0x48, 0x28, 0xba, 0x01, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x12,
	0x15, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x77, 0x61, 0x66, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x66, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77, 0x61, 0x66, 0x41, 0x70, 0x70, 0x73, 0x22, 0xc0,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2e, 0xba, 0x48, 0x2b, 0xba,
	0x01, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x12, 0x12, 0xe5, 0x88,
	0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1,
	0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x68, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x22, 0xe8, 0x04, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x58, 0xba, 0x48, 0x55, 0xba,
	0x01, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5,
	0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0xbf, 0x85, 0xe9,
	0xa1, 0xbb, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a,
	0x23, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31,
	0x20, 0x26, 0x26, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c,
	0x3d, 0x20, 0x31, 0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x3d, 0xba, 0x48, 0x3a, 0xba, 0x01, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe6, 0x8f, 0x8f, 0xe8,
	0xbf, 0xb0, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x1a, 0x0e,
	0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2d, 0xba, 0x48, 0x2a,
	0xba, 0x01, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0xe7, 0xad, 0x96,
	0xe7, 0x95, 0xa5, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20, 0x32, 0x5d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x54, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x3c, 0xba, 0x48, 0x39, 0xba, 0x01, 0x36, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0xe5, 0x91, 0xbd, 0xe4, 0xb8, 0xad, 0xe6, 0xad, 0xa4, 0xe7, 0xad, 0x96,
	0xe7, 0x95, 0xa5, 0xe6, 0x97, 0xb6, 0xe7, 0x9a, 0x84, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0xba, 0x1a,
	0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20, 0x32, 0x5d,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x41, 0xba,
	0x48, 0x3e, 0xba, 0x01, 0x3b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0xe5, 0x91, 0xbd, 0xe4, 0xb8, 0xad, 0xe6, 0xad, 0xa4, 0xe7, 0xad, 0x96,
	0xe7, 0x95, 0xa5, 0xe5, 0x90, 0x8e, 0xe7, 0x9a, 0x84, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0xba, 0x1a,
	0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20, 0x32, 0x5d,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x42, 0x64,
	0xba, 0x48, 0x61, 0xba, 0x01, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x12, 0x12, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe8, 0xa7, 0x84, 0xe5, 0x88,
	0x99, 0xe7, 0xbb, 0x84, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29,
	0x20, 0x3e, 0x20, 0x30, 0x92, 0x01, 0x2d, 0x22, 0x2b, 0xba, 0x01, 0x28, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x12, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb,
	0x84, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73,
	0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x15, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x9f, 0x05, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x58, 0xba, 0x48,
	0x55, 0xba, 0x01, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0xe7, 0xad, 0x96, 0xe7,
	0x95, 0xa5, 0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0xbf,
	0x85, 0xe9, 0xa1, 0xbb, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35, 0xe4, 0xb9, 0x8b, 0xe9, 0x97,
	0xb4, 0x1a, 0x23, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d,
	0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29,
	0x20, 0x3c, 0x3d, 0x20, 0x31, 0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x3d, 0xba, 0x48, 0x3a, 0xba, 0x01, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe6, 0x8f,
	0x8f, 0xe8, 0xbf, 0xb0, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba,
	0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2d, 0xba,
	0x48, 0x2a, 0xba, 0x01, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0xe7,
	0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x1a, 0x0f, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20, 0x32, 0x5d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x3c, 0xba, 0x48, 0x39, 0xba, 0x01, 0x36, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0xe5, 0x91, 0xbd, 0xe4, 0xb8, 0xad, 0xe6, 0xad, 0xa4, 0xe7,
	0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe6, 0x97, 0xb6, 0xe7, 0x9a, 0x84, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8,
	0xba, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20,
	0x32, 0x5d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x41, 0xba, 0x48, 0x3e, 0xba, 0x01, 0x3b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0xe5, 0x91, 0xbd, 0xe4, 0xb8, 0xad, 0xe6, 0xad, 0xa4, 0xe7,
	0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe5, 0x90, 0x8e, 0xe7, 0x9a, 0x84, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8,
	0xba, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20,
	0x32, 0x5d, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03,
	0x42, 0x64, 0xba, 0x48, 0x61, 0xba, 0x01, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x12, 0x12, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe8, 0xa7, 0x84,
	0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69,
	0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x92, 0x01, 0x2d, 0x22, 0x2b, 0xba, 0x01, 0x28, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x12, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99,
	0xe7, 0xbb, 0x84, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x25, 0xba, 0x48, 0x22,
	0xba, 0x01, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x0f, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe4,
	0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e,
	0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8e, 0x01,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x42, 0x63, 0xba, 0x48, 0x60, 0xba, 0x01, 0x35, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe9, 0x9c, 0x80, 0xe8,
	0xa6, 0x81, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0x9a, 0x84, 0xe7, 0xad, 0x96, 0xe7, 0x95,
	0xa5, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20,
	0x30, 0x92, 0x01, 0x25, 0x22, 0x23, 0xba, 0x01, 0x20, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0f,
	0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a,
	0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x15,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x25, 0xba, 0x48, 0x22, 0xba, 0x01, 0x1f, 0x0a,
	0x02, 0x69, 0x64, 0x12, 0x0f, 0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0xe4, 0xb8, 0x8d, 0xe5, 0xad,
	0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46,
	0x0a, 0x10, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2e, 0xba, 0x48,
	0x2b, 0xba, 0x01, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x12, 0x12,
	0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8,
	0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0xe5, 0x88, 0x86,
	0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a,
	0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x22, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x2b, 0xba, 0x48, 0x28, 0xba, 0x01, 0x25, 0x0a, 0x02, 0x69, 0x64,
	0x12, 0x15, 0xe5, 0x86, 0x85, 0xe7, 0xbd, 0xae, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe4, 0xb8,
	0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20,
	0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2e, 0xba, 0x48, 0x2b, 0xba,
	0x01, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x12, 0x12, 0xe5, 0x88,
	0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1,
	0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74,
	0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x6b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xa6, 0x04, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x52, 0xba, 0x48, 0x4f, 0xba, 0x01, 0x4c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0,
	0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b,
	0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20,
	0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69,
	0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x60,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x3e, 0xba, 0x48, 0x3b, 0xba, 0x01, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99,
	0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7,
	0xa9, 0xba, 0x1a, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e,
	0x3d, 0x20, 0x31, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6d, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x4e, 0xba, 0x48, 0x4b, 0xba, 0x01, 0x48, 0x0a, 0x0a, 0x72, 0x69,
	0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89,
	0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa4, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0x9a, 0x84, 0xe9,
	0xa3, 0x8e, 0xe9, 0x99, 0xa9, 0xe7, 0xad, 0x89, 0xe7, 0xba, 0xa7, 0x1a, 0x17, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20, 0x32, 0x20, 0x2c, 0x20, 0x33, 0x20,
	0x2c, 0x20, 0x34, 0x5d, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x5b, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x40, 0xba, 0x48, 0x3d, 0xba, 0x01, 0x3a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x12, 0x24, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad,
	0xa4, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe6, 0x89, 0x80, 0xe5, 0xb1, 0x9e, 0xe7, 0x9a, 0x84,
	0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x3e, 0x20, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x77, 0x0a, 0x0b,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x42, 0x3b, 0xba, 0x48,
	0x38, 0xba, 0x01, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x12, 0x15, 0xe8, 0xaf, 0xb7, 0xe5, 0xae, 0x8c, 0xe5, 0x96, 0x84, 0xe8, 0xa7, 0x84, 0xe5,
	0x88, 0x99, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0xba, 0x1a, 0x0c, 0x74, 0x68, 0x69, 0x73, 0x20, 0x21,
	0x3d, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6c, 0x61,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xec, 0x04, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x34, 0xba, 0x48, 0x31, 0xba, 0x01, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe9, 0x9c, 0x80, 0xe8, 0xa6, 0x81, 0xe4,
	0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe7, 0x9a, 0x84, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0x1a, 0x08,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x66, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x52, 0xba, 0x48, 0x4f, 0xba,
	0x01, 0x4c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99,
	0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35, 0xe5, 0xad, 0x97,
	0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69, 0x7a, 0x65, 0x28,
	0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x35, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0xba, 0x48, 0x3b, 0xba, 0x01,
	0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe4, 0xb8, 0x8d, 0xe8,
	0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x1a, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74,
	0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x4e, 0xba, 0x48, 0x4b, 0xba,
	0x01, 0x48, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21,
	0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa4, 0xe8, 0xa7, 0x84, 0xe5,
	0x88, 0x99, 0xe7, 0x9a, 0x84, 0xe9, 0xa3, 0x8e, 0xe9, 0x99, 0xa9, 0xe7, 0xad, 0x89, 0xe7, 0xba,
	0xa7, 0x1a, 0x17, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20, 0x2c, 0x20,
	0x32, 0x20, 0x2c, 0x20, 0x33, 0x20, 0x2c, 0x20, 0x34, 0x5d, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x5b, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x40, 0xba, 0x48, 0x3d, 0xba, 0x01, 0x3a, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x24, 0xe8, 0xaf, 0xb7, 0xe9, 0x80,
	0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0xad, 0xa4, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe6, 0x89, 0x80,
	0xe5, 0xb1, 0x9e, 0xe7, 0x9a, 0x84, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0x1a,
	0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x77, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61,
	0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x42, 0x3b, 0xba, 0x48, 0x38, 0xba, 0x01, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6c,
	0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x12, 0x15, 0xe8, 0xaf, 0xb7, 0xe5, 0xae, 0x8c, 0xe5,
	0x96, 0x84, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0xba, 0x1a, 0x0c,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x21, 0x3d, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0xc8, 0x01, 0x01, 0x52,
	0x0a, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x66, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x3b, 0xba, 0x48, 0x38, 0xba, 0x01, 0x35,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9,
	0xe9, 0x9c, 0x80, 0xe8, 0xa6, 0x81, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0x9a, 0x84, 0xe8,
	0xa7, 0x84, 0xe5, 0x88, 0x99, 0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73,
	0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xcb, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x55, 0xba, 0x48, 0x52, 0xba,
	0x01, 0x4f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99,
	0xe7, 0xbb, 0x84, 0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35,
	0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31,
	0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0xba, 0x48,
	0x3d, 0xba, 0x01, 0x3a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0xe6, 0x8f, 0x8f, 0xe8,
	0xbf, 0xb0, 0xe7, 0xa6, 0x81, 0xe6, 0xad, 0xa2, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x1a, 0x0e,
	0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x43, 0xba, 0x48, 0x40, 0xba, 0x01, 0x3d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0x98,
	0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xaf, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe8, 0xa7, 0x84,
	0xe5, 0x88, 0x99, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20,
	0x2c, 0x20, 0x32, 0x5d, 0x52, 0x09, 0x69, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x22,
	0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x85, 0x03, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x28,
	0xba, 0x48, 0x25, 0xba, 0x01, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x12, 0xe8, 0xa7, 0x84, 0xe5,
	0x88, 0x99, 0xe7, 0xbb, 0x84, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x69, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x55, 0xba, 0x48, 0x52, 0xba,
	0x01, 0x4f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99,
	0xe7, 0xbb, 0x84, 0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0xe5, 0x9c, 0xa8, 0x31, 0x7e, 0x31, 0x35,
	0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x23, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31,
	0x35, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0xba, 0x48,
	0x3d, 0xba, 0x01, 0x3a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0xe6, 0x8f, 0x8f, 0xe8,
	0xbf, 0xb0, 0xe7, 0xa6, 0x81, 0xe6, 0xad, 0xa2, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x1a, 0x0e,
	0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x43, 0xba, 0x48, 0x40, 0xba, 0x01, 0x3d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x12, 0x1e, 0xe8, 0xaf, 0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe6, 0x98,
	0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xaf, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe8, 0xa7, 0x84,
	0xe5, 0x88, 0x99, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x31, 0x20,
	0x2c, 0x20, 0x32, 0x5d, 0x52, 0x09, 0x69, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x22,
	0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x6f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42,
	0x5d, 0xba, 0x48, 0x5a, 0xba, 0x01, 0x29, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0xe8, 0xaf,
	0xb7, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84,
	0x1a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x29, 0x20, 0x3e, 0x20, 0x30,
	0x92, 0x01, 0x2b, 0x22, 0x29, 0xba, 0x01, 0x26, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x15, 0xe8,
	0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe7, 0xbb, 0x84, 0xe9, 0x80, 0x89, 0xe6, 0x8b, 0xa9, 0xe9, 0x94,
	0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4f, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x28,
	0xba, 0x48, 0x25, 0xba, 0x01, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x12, 0xe8, 0xa7, 0x84, 0xe5,
	0x88, 0x99, 0xe7, 0xbb, 0x84, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x1a, 0x08,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x02, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x2e, 0xba, 0x48, 0x2b, 0xba, 0x01, 0x28,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9,
	0xa1, 0xb5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x77, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x2f, 0xba, 0x48, 0x2c, 0xba, 0x01, 0x29, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0xe5,
	0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x1a, 0x08, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x72, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x10, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x69, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3a, 0x0a,
	0x0b, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x42, 0x2e, 0x0a, 0x0d, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x61, 0x66, 0x54, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1b, 0x77, 0x61,
	0x66, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x66,
	0x54, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_wafTop_v1_message_proto_rawDescOnce sync.Once
	file_api_wafTop_v1_message_proto_rawDescData = file_api_wafTop_v1_message_proto_rawDesc
)

func file_api_wafTop_v1_message_proto_rawDescGZIP() []byte {
	file_api_wafTop_v1_message_proto_rawDescOnce.Do(func() {
		file_api_wafTop_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_wafTop_v1_message_proto_rawDescData)
	})
	return file_api_wafTop_v1_message_proto_rawDescData
}

var file_api_wafTop_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_api_wafTop_v1_message_proto_goTypes = []any{
	(*SeclangMod)(nil),             // 0: api.wafTop.v1.SeclangMod
	(*CreateWafAppRequest)(nil),    // 1: api.wafTop.v1.CreateWafAppRequest
	(*CreateWafAppReply)(nil),      // 2: api.wafTop.v1.CreateWafAppReply
	(*UpdateWafAppRequest)(nil),    // 3: api.wafTop.v1.UpdateWafAppRequest
	(*UpdateWafAppReply)(nil),      // 4: api.wafTop.v1.UpdateWafAppReply
	(*GetWafAppRequest)(nil),       // 5: api.wafTop.v1.GetWafAppRequest
	(*GetWafAppReply)(nil),         // 6: api.wafTop.v1.GetWafAppReply
	(*ListWafAppRequest)(nil),      // 7: api.wafTop.v1.ListWafAppRequest
	(*WafAppInfo)(nil),             // 8: api.wafTop.v1.WafAppInfo
	(*ListWafAppReply)(nil),        // 9: api.wafTop.v1.ListWafAppReply
	(*CreateServerRequest)(nil),    // 10: api.wafTop.v1.CreateServerRequest
	(*CreateServerReply)(nil),      // 11: api.wafTop.v1.CreateServerReply
	(*UpdateServerRequest)(nil),    // 12: api.wafTop.v1.UpdateServerRequest
	(*UpdateServerReply)(nil),      // 13: api.wafTop.v1.UpdateServerReply
	(*DeleteRequest)(nil),          // 14: api.wafTop.v1.DeleteRequest
	(*DeleteReply)(nil),            // 15: api.wafTop.v1.DeleteReply
	(*GetServerRequest)(nil),       // 16: api.wafTop.v1.GetServerRequest
	(*GetServerReply)(nil),         // 17: api.wafTop.v1.GetServerReply
	(*ListServerRequest)(nil),      // 18: api.wafTop.v1.ListServerRequest
	(*ServerInfo)(nil),             // 19: api.wafTop.v1.ServerInfo
	(*ListServerReply)(nil),        // 20: api.wafTop.v1.ListServerReply
	(*CreateStrategyRequest)(nil),  // 21: api.wafTop.v1.CreateStrategyRequest
	(*CreateStrategyReply)(nil),    // 22: api.wafTop.v1.CreateStrategyReply
	(*UpdateStrategyRequest)(nil),  // 23: api.wafTop.v1.UpdateStrategyRequest
	(*UpdateStrategyReply)(nil),    // 24: api.wafTop.v1.UpdateStrategyReply
	(*DeleteStrategyRequest)(nil),  // 25: api.wafTop.v1.DeleteStrategyRequest
	(*DeleteStrategyReply)(nil),    // 26: api.wafTop.v1.DeleteStrategyReply
	(*GetStrategyRequest)(nil),     // 27: api.wafTop.v1.GetStrategyRequest
	(*GetStrategyReply)(nil),       // 28: api.wafTop.v1.GetStrategyReply
	(*ListStrategyRequest)(nil),    // 29: api.wafTop.v1.ListStrategyRequest
	(*StrategyInfo)(nil),           // 30: api.wafTop.v1.StrategyInfo
	(*ListStrategyReply)(nil),      // 31: api.wafTop.v1.ListStrategyReply
	(*GetBuildRuleRequest)(nil),    // 32: api.wafTop.v1.GetBuildRuleRequest
	(*GetBuildRuleReply)(nil),      // 33: api.wafTop.v1.GetBuildRuleReply
	(*ListBuildRuleRequest)(nil),   // 34: api.wafTop.v1.ListBuildRuleRequest
	(*BuildinRule)(nil),            // 35: api.wafTop.v1.BuildinRule
	(*ListBuildRuleReply)(nil),     // 36: api.wafTop.v1.ListBuildRuleReply
	(*CreateUserRuleRequest)(nil),  // 37: api.wafTop.v1.CreateUserRuleRequest
	(*CreateUserRuleReply)(nil),    // 38: api.wafTop.v1.CreateUserRuleReply
	(*UpdateUserRuleRequest)(nil),  // 39: api.wafTop.v1.UpdateUserRuleRequest
	(*UpdateUserRuleReply)(nil),    // 40: api.wafTop.v1.UpdateUserRuleReply
	(*DeleteUserRuleRequest)(nil),  // 41: api.wafTop.v1.DeleteUserRuleRequest
	(*DeleteUserRuleReply)(nil),    // 42: api.wafTop.v1.DeleteUserRuleReply
	(*CreateRuleGroupRequest)(nil), // 43: api.wafTop.v1.CreateRuleGroupRequest
	(*CreateRuleGroupReply)(nil),   // 44: api.wafTop.v1.CreateRuleGroupReply
	(*UpdateRuleGroupRequest)(nil), // 45: api.wafTop.v1.UpdateRuleGroupRequest
	(*UpdateRuleGroupReply)(nil),   // 46: api.wafTop.v1.UpdateRuleGroupReply
	(*DeleteRuleGroupRequest)(nil), // 47: api.wafTop.v1.DeleteRuleGroupRequest
	(*DeleteRuleGroupReply)(nil),   // 48: api.wafTop.v1.DeleteRuleGroupReply
	(*GetRuleGroupRequest)(nil),    // 49: api.wafTop.v1.GetRuleGroupRequest
	(*GetRuleGroupReply)(nil),      // 50: api.wafTop.v1.GetRuleGroupReply
	(*ListRuleGroupRequest)(nil),   // 51: api.wafTop.v1.ListRuleGroupRequest
	(*ListRuleGroupReply)(nil),     // 52: api.wafTop.v1.ListRuleGroupReply
	(*RuleGroupInfo)(nil),          // 53: api.wafTop.v1.RuleGroupInfo
	(*ListRuleInfoByGroup)(nil),    // 54: api.wafTop.v1.ListRuleInfoByGroup
}
var file_api_wafTop_v1_message_proto_depIdxs = []int32{
	19, // 0: api.wafTop.v1.GetWafAppReply.server_info:type_name -> api.wafTop.v1.ServerInfo
	8,  // 1: api.wafTop.v1.ListWafAppReply.waf_apps:type_name -> api.wafTop.v1.WafAppInfo
	8,  // 2: api.wafTop.v1.GetServerReply.waf_apps:type_name -> api.wafTop.v1.WafAppInfo
	19, // 3: api.wafTop.v1.ListServerReply.list_servers:type_name -> api.wafTop.v1.ServerInfo
	53, // 4: api.wafTop.v1.GetStrategyReply.rule_group_infos:type_name -> api.wafTop.v1.RuleGroupInfo
	30, // 5: api.wafTop.v1.ListStrategyReply.strategies:type_name -> api.wafTop.v1.StrategyInfo
	35, // 6: api.wafTop.v1.ListBuildRuleReply.buildin_rules:type_name -> api.wafTop.v1.BuildinRule
	0,  // 7: api.wafTop.v1.CreateUserRuleRequest.seclang_mod:type_name -> api.wafTop.v1.SeclangMod
	0,  // 8: api.wafTop.v1.UpdateUserRuleRequest.seclang_mod:type_name -> api.wafTop.v1.SeclangMod
	54, // 9: api.wafTop.v1.GetRuleGroupReply.list_rules:type_name -> api.wafTop.v1.ListRuleInfoByGroup
	53, // 10: api.wafTop.v1.ListRuleGroupReply.rule_group_infos:type_name -> api.wafTop.v1.RuleGroupInfo
	0,  // 11: api.wafTop.v1.ListRuleInfoByGroup.seclang_mod:type_name -> api.wafTop.v1.SeclangMod
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_wafTop_v1_message_proto_init() }
func file_api_wafTop_v1_message_proto_init() {
	if File_api_wafTop_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_wafTop_v1_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SeclangMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWafAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWafAppReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWafAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWafAppReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetWafAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetWafAppReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListWafAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*WafAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListWafAppReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ListServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ListStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*StrategyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ListStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetBuildRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetBuildRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ListBuildRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*BuildinRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ListBuildRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRuleGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRuleGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRuleGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRuleGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRuleGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRuleGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GetRuleGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*GetRuleGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ListRuleGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*ListRuleGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*RuleGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wafTop_v1_message_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*ListRuleInfoByGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_wafTop_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_wafTop_v1_message_proto_goTypes,
		DependencyIndexes: file_api_wafTop_v1_message_proto_depIdxs,
		MessageInfos:      file_api_wafTop_v1_message_proto_msgTypes,
	}.Build()
	File_api_wafTop_v1_message_proto = out.File
	file_api_wafTop_v1_message_proto_rawDesc = nil
	file_api_wafTop_v1_message_proto_goTypes = nil
	file_api_wafTop_v1_message_proto_depIdxs = nil
}
